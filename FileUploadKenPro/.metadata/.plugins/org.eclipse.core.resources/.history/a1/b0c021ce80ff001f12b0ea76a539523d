package com.kenpro.controller;

import java.time.LocalDateTime;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.kenpro.customvalidations.CustomDateValidator;
import com.kenpro.requestDTO.UploadRequestDTO;
import com.kenpro.service.FileService;

import jakarta.validation.Valid;

@RestController
@RequestMapping("/api/docs")
@CrossOrigin("*")
public class FileController {
	@Autowired
	FileService fileService;
	
	@PostMapping("/upload")
	public ResponseEntity<String> uploadFiles(
	        @RequestParam("files") List<MultipartFile> files,
	        @RequestParam("receivedFrom") List<String> receivedFrom,
	        @RequestParam("receivedDateTime") @Valid @CustomDateValidator List<LocalDateTime> receivedDateTime,
	        @RequestParam("modifiedDateTime") List<LocalDateTime> modifiedDateTime,
	        @RequestParam("description")List<String>description
	        )
	{
		  if (files.size() != receivedFrom.size() ||
		            files.size() != receivedDateTime.size() ||
		            files.size() != modifiedDateTime.size() ||
		            files.size() != description.size()) {
		            throw new RuntimeException("Mismatch -> Files count and Metadata count do not match!");
		        }

		fileService.saveDocuments(files, receivedFrom, receivedDateTime,modifiedDateTime,description);
	    return ResponseEntity.ok("Documents saved successfully.");
	}
//	public ResponseEntity<?> uploadFiles(
//            @RequestPart("files") List<MultipartFile> files, 
//            @Valid @ModelAttribute UploadRequestDTO requestDTO
//    ) {
//        if (files.size() != requestDTO.getReceivedFrom().size()) {
//            throw new RuntimeException("Mismatch: Files count and Metadata count do not match!");
//        }
//
//        fileService.saveDocuments(files, requestDTO.getReceivedFrom(), 
//                                  requestDTO.getReceivedDateTime(), 
//                                  requestDTO.getModifiedDateTime(), 
//                                  requestDTO.getDescription());
//        return ResponseEntity.ok().build();
//    }
}
